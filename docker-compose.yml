version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Python Backend (FastAPI)
  backend:
    build:
      context: ./src
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: rag-backend
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash}
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - DATABASE_URL=sqlite:///./research_papers.db
      - CACHE_ENABLED=${CACHE_ENABLED:-true}
      - CACHE_TTL_SECONDS=${CACHE_TTL_SECONDS:-3600}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-1000}
    volumes:
      - ./src:/app
      - backend_data:/app/data
    depends_on:
      qdrant:
        condition: service_healthy
    networks:
      - rag-network
    restart: unless-stopped
    command: python main.py

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: rag-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - rag-network
    restart: unless-stopped
    command: npm run dev -- -H 0.0.0.0

volumes:
  qdrant_storage:
    driver: local
  backend_data:
    driver: local

networks:
  rag-network:
    driver: bridge
